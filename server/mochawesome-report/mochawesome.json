{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-28T12:16:30.749Z",
    "end": "2021-04-28T12:16:31.997Z",
    "duration": 1248,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8ac6b825-63b2-46b3-ac2b-69de8a475798",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d112db76-d56a-418d-bd38-19a53a1bf510",
          "title": "Testing Pet API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\petTest.js",
          "file": "\\test\\petTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "fullTitle": "Testing Pet API \"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "timedOut": false,
              "duration": 363,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Alex', password: 'alex'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        userId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "7362feb1-e23a-4e8a-9ede-af7b3bbdf57d",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not create a new pet without token",
              "fullTitle": "Testing Pet API should not create a new pet without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "602fece5-204c-4024-bb75-c107b92f6506",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new pet",
              "fullTitle": "Testing Pet API should create a new pet",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'Coco', breed: 'Boxer', weight: 15, age: 5, description: 'description', picture: '', user_Id: userId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "a73e2702-c7d5-4dc7-871c-b54040504de8",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet without token",
              "fullTitle": "Testing Pet API should not find pet without token",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "2485a066-58a2-4fd1-9832-30c65947d696",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet for non-existing user id",
              "fullTitle": "Testing Pet API should not find pet for non-existing user id",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/111')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "90b1f385-cc4a-4829-a776-da64aa6537d0",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find pet for its user id",
              "fullTitle": "Testing Pet API should find pet for its user id",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "2e1f6d42-4c38-4f31-9bf8-3811129a4c7b",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet without token",
              "fullTitle": "Testing Pet API should not update pet without token",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "f248e905-82e8-4b35-94ca-d707758c1f0b",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet for non-existing ID",
              "fullTitle": "Testing Pet API should not update pet for non-existing ID",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/111')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'another name', breed: 'another breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "7110747d-3484-4810-8681-e67882974381",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Created pet should not have changed",
              "fullTitle": "Testing Pet API Created pet should not have changed",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        expect(res.body[0]).to.have.property('name').not.to.be.equal('another name');\n        expect(res.body[0]).to.have.property('breed').not.to.be.equal('another breed');\n        done();\n    });",
              "err": {},
              "uuid": "dfa4ec7e-8c6e-471d-8014-15b726c7faee",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update pet for its ID",
              "fullTitle": "Testing Pet API should update pet for its ID",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'updated name', breed: 'new breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "fb6ced7e-c971-4ba0-afdc-4e6b730d8826",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete pet without token",
              "fullTitle": "Testing Pet API should not delete pet without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "27c0e9dc-6a81-4f9d-a106-f452b55c9ab9",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete pet for its ID",
              "fullTitle": "Testing Pet API should delete pet for its ID",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "7eadfd3a-a131-49a7-aa18-26ff122634d5",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted oet",
              "fullTitle": "Testing Pet API should not find deleted oet",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "4f66e4c1-7952-4a2b-b929-7fc7f83cd6c2",
              "parentUUID": "d112db76-d56a-418d-bd38-19a53a1bf510",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "602fece5-204c-4024-bb75-c107b92f6506",
            "a73e2702-c7d5-4dc7-871c-b54040504de8",
            "2485a066-58a2-4fd1-9832-30c65947d696",
            "90b1f385-cc4a-4829-a776-da64aa6537d0",
            "2e1f6d42-4c38-4f31-9bf8-3811129a4c7b",
            "f248e905-82e8-4b35-94ca-d707758c1f0b",
            "7110747d-3484-4810-8681-e67882974381",
            "dfa4ec7e-8c6e-471d-8014-15b726c7faee",
            "fb6ced7e-c971-4ba0-afdc-4e6b730d8826",
            "27c0e9dc-6a81-4f9d-a106-f452b55c9ab9",
            "7eadfd3a-a131-49a7-aa18-26ff122634d5",
            "4f66e4c1-7952-4a2b-b929-7fc7f83cd6c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c86772bf-ec90-4522-9323-c797271ef114",
          "title": "Testing User API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should save a new user",
              "fullTitle": "Testing User API should save a new user",
              "timedOut": false,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({username: 'Celia', password: 'celia', address: 'new direction', description: 'new description'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "45755790-43ce-411a-8feb-150b46df9176",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user for its name",
              "fullTitle": "Testing User API should find user for its name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Celia')\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "cb2ce953-6ea2-44e6-9bf2-9a209c4ae46f",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user for non-existing user name",
              "fullTitle": "Testing User API should not find user for non-existing user name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Ce')\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "ab48894f-9c70-4195-bc71-e32fc5ca8dfb",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user and return login token",
              "fullTitle": "Testing User API should find user and return login token",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/login')\n    .send({username: 'Celia', password: 'celia'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        done();\n    });",
              "err": {},
              "uuid": "ed766ece-d77b-4d12-b0ba-dc392cbcfa55",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user without token",
              "fullTitle": "Testing User API should not find user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "01679ecf-3a69-4a74-b9d7-85769de95d77",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user for its ID",
              "fullTitle": "Testing User API should find user for its ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "9c1cbaa5-6917-473b-bad3-76710496089d",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user without token",
              "fullTitle": "Testing User API should not update user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "b9f9ace2-fe96-4b6b-b092-92d2a8b3a564",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user for non-existing ID",
              "fullTitle": "Testing User API should not update user for non-existing ID",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/111')\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'another address', description: 'another description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "0f0906a6-849d-4c72-9199-98d751244c69",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Created user should not have changed",
              "fullTitle": "Testing User API Created user should not have changed",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        expect(res.body[0]).to.have.property('address').not.to.be.equal('another address');\n        expect(res.body[0]).to.have.property('description').not.to.be.equal('another description');\n        done();\n    });",
              "err": {},
              "uuid": "96e7d773-ab72-434c-840a-6b229f5b2339",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user for its ID",
              "fullTitle": "Testing User API should update user for its ID",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'updated address', description: 'updated description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "c17e77a6-4be7-497c-997d-bcac717d6042",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete user without token",
              "fullTitle": "Testing User API should not delete user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "06ff3a85-254d-442c-99fb-25c5f45f8c87",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete user for its ID",
              "fullTitle": "Testing User API should delete user for its ID",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "4f78ad06-ce9a-47cd-bec4-3ecd2c557142",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted user",
              "fullTitle": "Testing User API should not find deleted user",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "f249d17c-5c1f-4e96-b6ad-bbb4ea5baec1",
              "parentUUID": "c86772bf-ec90-4522-9323-c797271ef114",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45755790-43ce-411a-8feb-150b46df9176",
            "cb2ce953-6ea2-44e6-9bf2-9a209c4ae46f",
            "ab48894f-9c70-4195-bc71-e32fc5ca8dfb",
            "ed766ece-d77b-4d12-b0ba-dc392cbcfa55",
            "01679ecf-3a69-4a74-b9d7-85769de95d77",
            "9c1cbaa5-6917-473b-bad3-76710496089d",
            "b9f9ace2-fe96-4b6b-b092-92d2a8b3a564",
            "0f0906a6-849d-4c72-9199-98d751244c69",
            "96e7d773-ab72-434c-840a-6b229f5b2339",
            "c17e77a6-4be7-497c-997d-bcac717d6042",
            "06ff3a85-254d-442c-99fb-25c5f45f8c87",
            "4f78ad06-ce9a-47cd-bec4-3ecd2c557142",
            "f249d17c-5c1f-4e96-b6ad-bbb4ea5baec1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 713,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}