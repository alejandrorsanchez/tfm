{
  "stats": {
    "suites": 5,
    "tests": 67,
    "passes": 67,
    "pending": 0,
    "failures": 0,
    "start": "2021-05-27T17:35:11.029Z",
    "end": "2021-05-27T17:35:15.316Z",
    "duration": 4287,
    "testsRegistered": 67,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c8d0ffe8-dfbf-4e71-ae46-079b45d32df2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "903b46c9-febe-406d-9b38-712e89f17525",
          "title": "Testing Add API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\addTest.js",
          "file": "\\test\\addTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Add API\"",
              "fullTitle": "Testing Add API \"before all\" hook: Get session token and user id in \"Testing Add API\"",
              "timedOut": false,
              "duration": 378,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Prueba', password: 'prueba'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        userId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "06d8a02a-017c-496f-a57c-188ee8c9997a",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new pet for test user",
              "fullTitle": "Testing Add API should create a new pet for test user",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlPets)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'pet test', breed: 'breed test', weight: 1, age: 1, description: 'descriptionTest', picture: '', userId: userId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        petId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "a654cc5a-dd40-49ff-92fa-20fd03724eb5",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find any add by user id",
              "fullTitle": "Testing Add API should not find any add by user id",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "e8692b2e-f6cc-42c0-869e-423d425093ba",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create a new volunteer add without token",
              "fullTitle": "Testing Add API should not create a new volunteer add without token",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/volunteer')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "e546c4b0-eac2-486d-81f5-af85b687ca13",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new volunteer add",
              "fullTitle": "Testing Add API should create a new volunteer add",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/volunteer')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId: userId, petId: null})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        volunteerId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "59fd034b-2b88-4b4b-afef-56d34c658fc6",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create the same volunteer add",
              "fullTitle": "Testing Add API should not create the same volunteer add",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/volunteer')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId: userId, petId: null})\n    .end(function (err, res){\n        expect(res).to.have.status(409);\n        done();\n    });",
              "err": {},
              "uuid": "34f6ed5c-4db7-4c19-87a5-17ef42aff547",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find created add without token",
              "fullTitle": "Testing Add API should not find created add without token",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "defcec7f-9a7d-4978-be2c-3495f48b429d",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find add by non-existing user id",
              "fullTitle": "Testing Add API should not find add by non-existing user id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/0000')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "fcb9c77f-6ab8-42e0-b538-488ee248f0fc",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find volunteer add by its user id",
              "fullTitle": "Testing Add API should find volunteer add by its user id",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(volunteerId);\n        done();\n    });",
              "err": {},
              "uuid": "6df736d6-78a2-433f-8ca7-404d5767bf70",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create a new adoption add without token",
              "fullTitle": "Testing Add API should not create a new adoption add without token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/adoption')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "f6a0fe1a-ef75-49e7-b1a8-c8471a3ffdc6",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new adoption add",
              "fullTitle": "Testing Add API should create a new adoption add",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/adoption')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId: userId, petId: petId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        adoptionId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "a758411e-e156-46c5-b9b3-43de4d16439e",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create the same adoption add",
              "fullTitle": "Testing Add API should not create the same adoption add",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/adoption')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId: userId, petId: petId})\n    .end(function (err, res){\n        expect(res).to.have.status(409);\n        done();\n    });",
              "err": {},
              "uuid": "990507c2-53ee-4dad-8734-a56ab84bffed",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find adoption add by its user id",
              "fullTitle": "Testing Add API should find adoption add by its user id",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(2);\n        expect(res.body[1]).to.have.property('id').to.be.equal(adoptionId);\n        done();\n    });",
              "err": {},
              "uuid": "674fa284-57b0-4a45-947e-cca1d3231da7",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete add without token",
              "fullTitle": "Testing Add API should not delete add without token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + volunteerId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "c7e552dd-6b47-46dd-94ee-dfd44ea0025b",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete volunteer add by its ID",
              "fullTitle": "Testing Add API should delete volunteer add by its ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + volunteerId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "a551d282-95fc-4866-924a-beb3e241963d",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted volunteer add",
              "fullTitle": "Testing Add API should not find deleted volunteer add",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').not.be.equal(volunteerId);\n        done();\n    });",
              "err": {},
              "uuid": "15317f62-0f61-4060-aac8-776e7af5a9a1",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete adoption add by its ID",
              "fullTitle": "Testing Add API should delete adoption add by its ID",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + adoptionId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "dd0dff2d-1440-4def-813c-1016ca47074f",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted adoption add",
              "fullTitle": "Testing Add API should not find deleted adoption add",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "0cdc0c34-af79-456a-969e-0121d9da6151",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find any add by type 1 (Adoption) for my user id when another user searches for it",
              "fullTitle": "Testing Add API should not find any add by type 1 (Adoption) for my user id when another user searches for it",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({type: 1, userId: 1})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "730b9ce6-c81a-40f7-8cd3-2261128ef15d",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find any add by type 2 (Volunteer) for my user id when another user searches for it",
              "fullTitle": "Testing Add API should not find any add by type 2 (Volunteer) for my user id when another user searches for it",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({type: 2, userId: 1})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "64e2c68f-2047-48ad-9998-953fbdd3aa72",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete pet for its ID",
              "fullTitle": "Testing Add API should delete pet for its ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlPets)\n    .delete('/' + petId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "364eb823-c3e0-4f1a-911c-cf9f5db5f011",
              "parentUUID": "903b46c9-febe-406d-9b38-712e89f17525",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a654cc5a-dd40-49ff-92fa-20fd03724eb5",
            "e8692b2e-f6cc-42c0-869e-423d425093ba",
            "e546c4b0-eac2-486d-81f5-af85b687ca13",
            "59fd034b-2b88-4b4b-afef-56d34c658fc6",
            "34f6ed5c-4db7-4c19-87a5-17ef42aff547",
            "defcec7f-9a7d-4978-be2c-3495f48b429d",
            "fcb9c77f-6ab8-42e0-b538-488ee248f0fc",
            "6df736d6-78a2-433f-8ca7-404d5767bf70",
            "f6a0fe1a-ef75-49e7-b1a8-c8471a3ffdc6",
            "a758411e-e156-46c5-b9b3-43de4d16439e",
            "990507c2-53ee-4dad-8734-a56ab84bffed",
            "674fa284-57b0-4a45-947e-cca1d3231da7",
            "c7e552dd-6b47-46dd-94ee-dfd44ea0025b",
            "a551d282-95fc-4866-924a-beb3e241963d",
            "15317f62-0f61-4060-aac8-776e7af5a9a1",
            "dd0dff2d-1440-4def-813c-1016ca47074f",
            "0cdc0c34-af79-456a-969e-0121d9da6151",
            "730b9ce6-c81a-40f7-8cd3-2261128ef15d",
            "64e2c68f-2047-48ad-9998-953fbdd3aa72",
            "364eb823-c3e0-4f1a-911c-cf9f5db5f011"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "116f001f-0005-437e-8d45-1deac676af39",
          "title": "Testing Comunication API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\comunicationTest.js",
          "file": "\\test\\comunicationTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Comunication API\"",
              "fullTitle": "Testing Comunication API \"before all\" hook: Get session token and user id in \"Testing Comunication API\"",
              "timedOut": false,
              "duration": 354,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Prueba', password: 'prueba'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        myUserId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "ae16e9f9-1f02-4078-89b4-60584b250e7b",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should save another user for interaction",
              "fullTitle": "Testing Comunication API should save another user for interaction",
              "timedOut": false,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/')\n    .send({username: 'Prueba2', password: 'Prueba2', address: 'Prueba2 direction', description: 'Prueba2 description', email: 'Prueba2@gmail.com'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        chatUserId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "2708e75c-ef8d-4261-9ac8-a3e6127d7c6d",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find any comunications without token",
              "fullTitle": "Testing Comunication API should not find any comunications without token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + myUserId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "5fb7bb4b-9937-4559-8e3d-93c91584c186",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find any comunication by my user id",
              "fullTitle": "Testing Comunication API should not find any comunication by my user id",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + myUserId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "c8813a13-f54e-4fb4-98a9-51595ddfe72b",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create a new chat without token",
              "fullTitle": "Testing Comunication API should not create a new chat without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "c76e05d6-6fb5-4571-a287-a43653228335",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new chat between two users",
              "fullTitle": "Testing Comunication API should create a new chat between two users",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId1: myUserId, userId2: chatUserId, messages: 'hola', type: 1, notification: chatUserId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        chatId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "c658d64e-f2aa-4801-801a-7d481cfca710",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not create the same chat",
              "fullTitle": "Testing Comunication API should not create the same chat",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({userId1: myUserId, userId2: chatUserId, messages: 'hola', type: 1, notification: chatUserId})\n    .end(function (err, res){\n        expect(res).to.have.status(409);\n        done();\n    });",
              "err": {},
              "uuid": "db7b1ae6-f802-4e5a-8c41-b55eeb61e4dd",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find chat by non-existing user id",
              "fullTitle": "Testing Comunication API should not find chat by non-existing user id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/0000')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "94dc09bd-19d3-48b5-938d-feb2746535fa",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find chat by my user id",
              "fullTitle": "Testing Comunication API should find chat by my user id",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + myUserId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(chatId);\n        done();\n    });",
              "err": {},
              "uuid": "333ce6e3-563c-4edb-ae0d-c9fb4172bfa1",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find chat by chat user id",
              "fullTitle": "Testing Comunication API should find chat by chat user id",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + chatUserId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(chatId);\n        done();\n    });",
              "err": {},
              "uuid": "85bd37ba-36ca-4ac7-bbad-073b4db77be2",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find created chat between users without token",
              "fullTitle": "Testing Comunication API should not find created chat between users without token",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .query({userId1: myUserId, userId2: chatUserId, type: 1})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "91fb8d2e-092f-48f0-8936-9b17c3ff4c9a",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find chat between users by non-existing users id",
              "fullTitle": "Testing Comunication API should not find chat between users by non-existing users id",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .query({userId1: '0000', userId2: 'xxxxx', type: 1})\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "f46c3553-6e2d-4929-9984-3d680aa517f9",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find chat between users by its users id and type 1 (Adoption)",
              "fullTitle": "Testing Comunication API should find chat between users by its users id and type 1 (Adoption)",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .query({userId1: myUserId, userId2: chatUserId, type: '1'})\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id').to.be.equal(chatId);\n        expect(res.body).to.have.property('notification').to.be.equal(chatUserId);\n        done();\n    });",
              "err": {},
              "uuid": "f8d5ec32-71be-4217-ba8a-2fbd2d00d257",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update chat without token",
              "fullTitle": "Testing Comunication API should not update chat without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + chatId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "346582e8-a72b-4823-b6ca-d07a2fb0bfae",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update chat by non-existing ID",
              "fullTitle": "Testing Comunication API should not update chat by non-existing ID",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/00000')\n    .set('Authorization', 'Bearer '  + token)\n    .send({messages: 'hola', notification: 'notif'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(0);\n        done();\n    });",
              "err": {},
              "uuid": "87f6043c-4b63-406d-8b08-b6964c2e7731",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update chat by its ID",
              "fullTitle": "Testing Comunication API should update chat by its ID",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + chatId)\n    .set('Authorization', 'Bearer '  + token)\n    .send({messages: 'hola', notification: myUserId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(1);\n        done();\n    });",
              "err": {},
              "uuid": "be9a374c-f3ee-4fab-a9e6-bc0e87f733bc",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chat between users should now have notifications for the other user",
              "fullTitle": "Testing Comunication API Chat between users should now have notifications for the other user",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/')\n    .query({userId1: myUserId, userId2: chatUserId, type: '1'})\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id').to.be.equal(chatId);\n        expect(res.body).to.have.property('notification').to.be.equal(myUserId);\n        done();\n    });",
              "err": {},
              "uuid": "23c2eb48-bcd5-4e4b-80a0-d2cdbc50347f",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete chat without token",
              "fullTitle": "Testing Comunication API should not delete chat without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + chatId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "b61c3729-a581-4fea-bc70-64e57ed39c21",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete chat by its ID",
              "fullTitle": "Testing Comunication API should delete chat by its ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + chatId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "a7592595-2c95-460c-a6bf-ebc39022ded4",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted chat by any of its users id",
              "fullTitle": "Testing Comunication API should not find deleted chat by any of its users id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + chatUserId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "b5ad007c-7265-4fe9-9131-aa05e1b158c6",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete chat user for its ID",
              "fullTitle": "Testing Comunication API should delete chat user for its ID",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .delete('/' + chatUserId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "78f4e5f9-f532-4208-bf66-c5f07ed8a8f8",
              "parentUUID": "116f001f-0005-437e-8d45-1deac676af39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2708e75c-ef8d-4261-9ac8-a3e6127d7c6d",
            "5fb7bb4b-9937-4559-8e3d-93c91584c186",
            "c8813a13-f54e-4fb4-98a9-51595ddfe72b",
            "c76e05d6-6fb5-4571-a287-a43653228335",
            "c658d64e-f2aa-4801-801a-7d481cfca710",
            "db7b1ae6-f802-4e5a-8c41-b55eeb61e4dd",
            "94dc09bd-19d3-48b5-938d-feb2746535fa",
            "333ce6e3-563c-4edb-ae0d-c9fb4172bfa1",
            "85bd37ba-36ca-4ac7-bbad-073b4db77be2",
            "91fb8d2e-092f-48f0-8936-9b17c3ff4c9a",
            "f46c3553-6e2d-4929-9984-3d680aa517f9",
            "f8d5ec32-71be-4217-ba8a-2fbd2d00d257",
            "346582e8-a72b-4823-b6ca-d07a2fb0bfae",
            "87f6043c-4b63-406d-8b08-b6964c2e7731",
            "be9a374c-f3ee-4fab-a9e6-bc0e87f733bc",
            "23c2eb48-bcd5-4e4b-80a0-d2cdbc50347f",
            "b61c3729-a581-4fea-bc70-64e57ed39c21",
            "a7592595-2c95-460c-a6bf-ebc39022ded4",
            "b5ad007c-7265-4fe9-9131-aa05e1b158c6",
            "78f4e5f9-f532-4208-bf66-c5f07ed8a8f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 492,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5fc68e2f-53b1-493e-b228-737a1ff67ab3",
          "title": "Testing Email API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\emailTest.js",
          "file": "\\test\\emailTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Email API\"",
              "fullTitle": "Testing Email API \"before all\" hook: Get session token and user id in \"Testing Email API\"",
              "timedOut": false,
              "duration": 335,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Prueba', password: 'prueba'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        userId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "f0fbf07f-c984-4e41-8ac8-ce30bd082150",
              "parentUUID": "5fc68e2f-53b1-493e-b228-737a1ff67ab3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not send email without token",
              "fullTitle": "Testing Email API should not send email without token",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "3c3bdd4d-b901-41d4-89c6-12dbb53b4311",
              "parentUUID": "5fc68e2f-53b1-493e-b228-737a1ff67ab3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should send email and return 200",
              "fullTitle": "Testing Email API should send email and return 200",
              "timedOut": false,
              "duration": 1226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({senderName: 'Sender', receiverName: 'Receiver', receiverEmail: 'receiver@gmail.com'})\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "9c726e8e-c439-4903-a593-618cc33f5c13",
              "parentUUID": "5fc68e2f-53b1-493e-b228-737a1ff67ab3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c3bdd4d-b901-41d4-89c6-12dbb53b4311",
            "9c726e8e-c439-4903-a593-618cc33f5c13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1230,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
          "title": "Testing Pet API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\petTest.js",
          "file": "\\test\\petTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "fullTitle": "Testing Pet API \"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "timedOut": false,
              "duration": 365,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Prueba', password: 'prueba'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        userId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "97690051-b95f-4414-a785-9ab2fa5588ea",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not create a new pet without token",
              "fullTitle": "Testing Pet API should not create a new pet without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "af52e266-348e-42a2-afa7-3cb776343322",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new pet",
              "fullTitle": "Testing Pet API should create a new pet",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'Coco', breed: 'Boxer', weight: 15, age: 5, description: 'description', picture: '', userId: userId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "9c4c37c3-51f5-4dea-9c76-bb8884b13fee",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet without token",
              "fullTitle": "Testing Pet API should not find pet without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "80d27583-c79f-44ff-8b67-88224ad8e68c",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet by non-existing id",
              "fullTitle": "Testing Pet API should not find pet by non-existing id",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "63222727-d88a-4f07-aa31-81cd52ace5b7",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find pet by its id",
              "fullTitle": "Testing Pet API should find pet by its id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/00000')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "480f801d-ee51-48ce-8a5c-1b233ac36d3f",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet by non-existing user id",
              "fullTitle": "Testing Pet API should not find pet by non-existing user id",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/00000')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "4f69fa33-9efa-4763-9ddc-12d256f91c84",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find pet by its user id",
              "fullTitle": "Testing Pet API should find pet by its user id",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "e7095c62-30bd-44c8-98ae-504851fe41d2",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet without token",
              "fullTitle": "Testing Pet API should not update pet without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "ecd5e773-5d17-4386-8bb2-8e201b65fe28",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet by non-existing ID",
              "fullTitle": "Testing Pet API should not update pet by non-existing ID",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/00000')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'another name', breed: 'another breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(0);\n        done();\n    });",
              "err": {},
              "uuid": "eb5c7478-2241-4c24-a793-65acc3c518ac",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update pet by its ID",
              "fullTitle": "Testing Pet API should update pet by its ID",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'updated name', breed: 'new breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(1);\n        done();\n    });",
              "err": {},
              "uuid": "537de66f-c0f2-4d02-bfd9-b2f1283570c1",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete pet without token",
              "fullTitle": "Testing Pet API should not delete pet without token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "d08e411a-beb8-4396-bec8-a08051b44b6c",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete pet by its ID",
              "fullTitle": "Testing Pet API should delete pet by its ID",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "c0012976-323d-4401-a0ac-d78c11cfe2e9",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted pet",
              "fullTitle": "Testing Pet API should not find deleted pet",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "d02efdd1-7b39-4a24-8874-4deef8411f29",
              "parentUUID": "3c63ca83-d633-42cc-84f9-99c3022cdcaf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af52e266-348e-42a2-afa7-3cb776343322",
            "9c4c37c3-51f5-4dea-9c76-bb8884b13fee",
            "80d27583-c79f-44ff-8b67-88224ad8e68c",
            "63222727-d88a-4f07-aa31-81cd52ace5b7",
            "480f801d-ee51-48ce-8a5c-1b233ac36d3f",
            "4f69fa33-9efa-4763-9ddc-12d256f91c84",
            "e7095c62-30bd-44c8-98ae-504851fe41d2",
            "ecd5e773-5d17-4386-8bb2-8e201b65fe28",
            "eb5c7478-2241-4c24-a793-65acc3c518ac",
            "537de66f-c0f2-4d02-bfd9-b2f1283570c1",
            "d08e411a-beb8-4396-bec8-a08051b44b6c",
            "c0012976-323d-4401-a0ac-d78c11cfe2e9",
            "d02efdd1-7b39-4a24-8874-4deef8411f29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c9e27bde-3ca8-46b9-940f-0c077596becc",
          "title": "Testing User API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should save a new user",
              "fullTitle": "Testing User API should save a new user",
              "timedOut": false,
              "duration": 331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({username: 'Celia', password: 'celia', address: 'new direction', description: 'new description', email: 'email@gmail.com'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "073ef540-44d0-42bf-97b9-6b0ce8b3d28a",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user by its name and therefore return 409 by app logic",
              "fullTitle": "Testing User API should find user by its name and therefore return 409 by app logic",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Celia')\n    .end(function (err, res){\n        expect(res).to.have.status(409);\n        expect(res.body).to.have.property('message').to.be.equal('Ese usuario ya existe');\n        done();\n    });",
              "err": {},
              "uuid": "95f173f5-359b-4567-8125-8b825ac98667",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user by non-existing user name and therefore return 200 by app logic",
              "fullTitle": "Testing User API should not find user by non-existing user name and therefore return 200 by app logic",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Ce')\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "94376fcb-310f-42a9-b03b-8eec772eafa2",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user and return login token",
              "fullTitle": "Testing User API should find user and return login token",
              "timedOut": false,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/login')\n    .send({username: 'Celia', password: 'celia'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        done();\n    });",
              "err": {},
              "uuid": "50c44d27-d4f4-4ad3-8d97-6f66d2895f28",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user without token",
              "fullTitle": "Testing User API should not find user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "ce295eda-1f1d-4b8f-a536-b5e9c577e4fe",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user by its ID",
              "fullTitle": "Testing User API should find user by its ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "9430d566-3225-4735-9611-edf3ab506016",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user without token",
              "fullTitle": "Testing User API should not update user without token",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "4d3d0491-09a5-448e-b274-f40feec38a9d",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user by non-existing ID",
              "fullTitle": "Testing User API should not update user by non-existing ID",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/00000')\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'another address', description: 'another description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(0);\n        done();\n    });",
              "err": {},
              "uuid": "0aac2381-0698-4a11-9573-ef9749d46c04",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user by its ID",
              "fullTitle": "Testing User API should update user by its ID",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'updated address', description: 'updated description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('affectedRows').to.be.equal(1);\n        done();\n    });",
              "err": {},
              "uuid": "b0633c71-3d2d-49c1-9fd1-b5a8323413be",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete user without token",
              "fullTitle": "Testing User API should not delete user without token",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "abb8a025-0c28-483d-ab82-58265a7e4576",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete user by its ID",
              "fullTitle": "Testing User API should delete user by its ID",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "034446c2-f014-4fe1-9890-535c3455ad51",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted user",
              "fullTitle": "Testing User API should not find deleted user",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(404);\n        done();\n    });",
              "err": {},
              "uuid": "8a6e5c1d-a448-42e7-bc8f-37103347a2fa",
              "parentUUID": "c9e27bde-3ca8-46b9-940f-0c077596becc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "073ef540-44d0-42bf-97b9-6b0ce8b3d28a",
            "95f173f5-359b-4567-8125-8b825ac98667",
            "94376fcb-310f-42a9-b03b-8eec772eafa2",
            "50c44d27-d4f4-4ad3-8d97-6f66d2895f28",
            "ce295eda-1f1d-4b8f-a536-b5e9c577e4fe",
            "9430d566-3225-4735-9611-edf3ab506016",
            "4d3d0491-09a5-448e-b274-f40feec38a9d",
            "0aac2381-0698-4a11-9573-ef9749d46c04",
            "b0633c71-3d2d-49c1-9fd1-b5a8323413be",
            "abb8a025-0c28-483d-ab82-58265a7e4576",
            "034446c2-f014-4fe1-9890-535c3455ad51",
            "8a6e5c1d-a448-42e7-bc8f-37103347a2fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 747,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}