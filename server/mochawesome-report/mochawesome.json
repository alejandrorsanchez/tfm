{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-29T07:55:05.417Z",
    "end": "2021-04-29T07:55:06.574Z",
    "duration": 1157,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9680dab6-45ed-4a69-924f-7d92944b0bdf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
          "title": "Testing Pet API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\petTest.js",
          "file": "\\test\\petTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "fullTitle": "Testing Pet API \"before all\" hook: Get session token and user id in \"Testing Pet API\"",
              "timedOut": false,
              "duration": 319,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(urlUsers)\n    .post('/login')\n    .send({username: 'Alex', password: 'alex'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        userId = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "b0a072f0-94c2-4709-905a-d401f412b5b8",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not create a new pet without token",
              "fullTitle": "Testing Pet API should not create a new pet without token",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({})\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "3c81fbc0-7f06-4de4-93bc-72512cf67152",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new pet",
              "fullTitle": "Testing Pet API should create a new pet",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'Coco', breed: 'Boxer', weight: 15, age: 5, description: 'description', picture: '', user_Id: userId})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "5651f388-722b-4ae0-82de-4dbe658e8d6d",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet without token",
              "fullTitle": "Testing Pet API should not find pet without token",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "87359644-fe0c-4e01-93af-21072f73d75a",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find pet for non-existing user id",
              "fullTitle": "Testing Pet API should not find pet for non-existing user id",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/111')\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "b4c1431a-fcec-41ea-8c80-88f73f316232",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find pet for its user id",
              "fullTitle": "Testing Pet API should find pet for its user id",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "db9e29ad-d85b-4ffe-8a21-a82f7dbe4e80",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet without token",
              "fullTitle": "Testing Pet API should not update pet without token",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "46736b26-2a46-4725-be55-8c38c67595b7",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update pet for non-existing ID",
              "fullTitle": "Testing Pet API should not update pet for non-existing ID",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/111')\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'another name', breed: 'another breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "f891bf76-4bfe-4346-a2ef-f47956d964ad",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Created pet should not have changed",
              "fullTitle": "Testing Pet API Created pet should not have changed",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        expect(res.body[0]).to.have.property('name').not.to.be.equal('another name');\n        expect(res.body[0]).to.have.property('breed').not.to.be.equal('another breed');\n        done();\n    });",
              "err": {},
              "uuid": "862af2ba-2ce4-4e89-bc25-e6eddb7ad690",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update pet for its ID",
              "fullTitle": "Testing Pet API should update pet for its ID",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({name: 'updated name', breed: 'new breed'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "4a0c0c56-fe2b-44a2-b4f1-eb263f9392bb",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete pet without token",
              "fullTitle": "Testing Pet API should not delete pet without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "55d6f98c-282c-4713-ba8b-bc6a142e2347",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete pet for its ID",
              "fullTitle": "Testing Pet API should delete pet for its ID",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "b36a8b5c-bfdb-4dc3-8e9f-e21888e5b6a6",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted oet",
              "fullTitle": "Testing Pet API should not find deleted oet",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/' + userId)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "8c05ed37-e540-4d24-95b5-2ce2d364fbc8",
              "parentUUID": "13c4f1bf-9498-49c4-9220-fc4aeda494ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c81fbc0-7f06-4de4-93bc-72512cf67152",
            "5651f388-722b-4ae0-82de-4dbe658e8d6d",
            "87359644-fe0c-4e01-93af-21072f73d75a",
            "b4c1431a-fcec-41ea-8c80-88f73f316232",
            "db9e29ad-d85b-4ffe-8a21-a82f7dbe4e80",
            "46736b26-2a46-4725-be55-8c38c67595b7",
            "f891bf76-4bfe-4346-a2ef-f47956d964ad",
            "862af2ba-2ce4-4e89-bc25-e6eddb7ad690",
            "4a0c0c56-fe2b-44a2-b4f1-eb263f9392bb",
            "55d6f98c-282c-4713-ba8b-bc6a142e2347",
            "b36a8b5c-bfdb-4dc3-8e9f-e21888e5b6a6",
            "8c05ed37-e540-4d24-95b5-2ce2d364fbc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "63522510-ac6a-45d0-83f4-edc34a394462",
          "title": "Testing User API",
          "fullFile": "C:\\Users\\arodr\\Documents\\AngularProjects\\tfm\\server\\test\\userTest.js",
          "file": "\\test\\userTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should save a new user",
              "fullTitle": "Testing User API should save a new user",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/')\n    .send({username: 'Celia', password: 'celia', address: 'new direction', description: 'new description'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('id');\n        id = res.body.id;\n        done();\n    });",
              "err": {},
              "uuid": "00967699-aee8-4e16-ad68-1452e829f05f",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user for its name",
              "fullTitle": "Testing User API should find user for its name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Celia')\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "b06e97be-796b-47a8-a0b6-c51752fc72d5",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user for non-existing user name",
              "fullTitle": "Testing User API should not find user for non-existing user name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/search/Ce')\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "9c281601-b562-4c74-84b4-7ea8730e03b9",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user and return login token",
              "fullTitle": "Testing User API should find user and return login token",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .post('/login')\n    .send({username: 'Celia', password: 'celia'})\n    .end(function (err, res){\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.property('token').not.be.null;\n        token = res.body.token;\n        done();\n    });",
              "err": {},
              "uuid": "72010f0d-fc90-4a06-8b1d-00454f40102b",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find user without token",
              "fullTitle": "Testing User API should not find user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "12cc94ec-3499-421d-8188-b4799f61936e",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should find user for its ID",
              "fullTitle": "Testing User API should find user for its ID",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        done();\n    });",
              "err": {},
              "uuid": "0449c3fe-6d2c-4261-b6fb-49f02a977c0f",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user without token",
              "fullTitle": "Testing User API should not update user without token",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "65c3293b-7192-464a-88f8-5b091dfce985",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not update user for non-existing ID",
              "fullTitle": "Testing User API should not update user for non-existing ID",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/111')\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'another address', description: 'another description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "6b3192c2-baab-40a9-afe8-7befc02a195d",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Created user should not have changed",
              "fullTitle": "Testing User API Created user should not have changed",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(1);\n        expect(res.body[0]).to.have.property('id').to.be.equal(id);\n        expect(res.body[0]).to.have.property('address').not.to.be.equal('another address');\n        expect(res.body[0]).to.have.property('description').not.to.be.equal('another description');\n        done();\n    });",
              "err": {},
              "uuid": "295730bc-11c0-400e-bf8d-e18270d71272",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update user for its ID",
              "fullTitle": "Testing User API should update user for its ID",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .put('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .send({address: 'updated address', description: 'updated description'})\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "cb4bdbf8-01f4-40bf-8b09-d84be0696eea",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete user without token",
              "fullTitle": "Testing User API should not delete user without token",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .end(function (err, res){\n        expect(res.header['authorization']).to.be.undefined;\n        expect(res).to.have.status(403);\n        done();\n    });",
              "err": {},
              "uuid": "39679436-e26a-439a-8fc2-e22ea75c2e89",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete user for its ID",
              "fullTitle": "Testing User API should delete user for its ID",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .delete('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "fbfb5391-03a1-4846-acf2-b742932ad002",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not find deleted user",
              "fullTitle": "Testing User API should not find deleted user",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get('/' + id)\n    .set('Authorization', 'Bearer '  + token)\n    .end(function (err, res){\n        expect(res.header['authorization']).not.be.null;\n        expect(res).to.have.status(200);\n        expect(res.body).to.have.lengthOf(0);\n        done();\n    });",
              "err": {},
              "uuid": "75d74adc-42a0-4c1b-b7b9-33563ec6331e",
              "parentUUID": "63522510-ac6a-45d0-83f4-edc34a394462",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00967699-aee8-4e16-ad68-1452e829f05f",
            "b06e97be-796b-47a8-a0b6-c51752fc72d5",
            "9c281601-b562-4c74-84b4-7ea8730e03b9",
            "72010f0d-fc90-4a06-8b1d-00454f40102b",
            "12cc94ec-3499-421d-8188-b4799f61936e",
            "0449c3fe-6d2c-4261-b6fb-49f02a977c0f",
            "65c3293b-7192-464a-88f8-5b091dfce985",
            "6b3192c2-baab-40a9-afe8-7befc02a195d",
            "295730bc-11c0-400e-bf8d-e18270d71272",
            "cb4bdbf8-01f4-40bf-8b09-d84be0696eea",
            "39679436-e26a-439a-8fc2-e22ea75c2e89",
            "fbfb5391-03a1-4846-acf2-b742932ad002",
            "75d74adc-42a0-4c1b-b7b9-33563ec6331e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 685,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}