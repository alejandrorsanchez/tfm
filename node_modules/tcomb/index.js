/*! @preserve
 *
 * tcomb.js - Type checking and DDD for JavaScript
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2014-2016 Giulio Canti
 *
 */

// core
var t = require('tcomb/lib/assert');

// types
t.Any = require('tcomb/lib/Any');
t.Array = require('tcomb/lib/Array');
t.Boolean = require('tcomb/lib/Boolean');
t.Date = require('tcomb/lib/Date');
t.Error = require('tcomb/lib/Error');
t.Function = require('tcomb/lib/Function');
t.Nil = require('tcomb/lib/Nil');
t.Number = require('tcomb/lib/Number');
t.Integer = require('tcomb/lib/Integer');
t.IntegerT = t.Integer;
t.Object = require('tcomb/lib/Object');
t.RegExp = require('tcomb/lib/RegExp');
t.String = require('tcomb/lib/String');
t.Type = require('tcomb/lib/Type');
t.TypeT = t.Type;

// short alias are deprecated
t.Arr = t.Array;
t.Bool = t.Boolean;
t.Dat = t.Date;
t.Err = t.Error;
t.Func = t.Function;
t.Num = t.Number;
t.Obj = t.Object;
t.Re = t.RegExp;
t.Str = t.String;

// combinators
t.dict = require('tcomb/lib/dict');
t.declare = require('tcomb/lib/declare');
t.enums = require('tcomb/lib/enums');
t.irreducible = require('tcomb/lib/irreducible');
t.list = require('tcomb/lib/list');
t.maybe = require('tcomb/lib/maybe');
t.refinement = require('tcomb/lib/refinement');
t.struct = require('tcomb/lib/struct');
t.tuple = require('tcomb/lib/tuple');
t.union = require('tcomb/lib/union');
t.func = require('tcomb/lib/func');
t.intersection = require('tcomb/lib/intersection');
t.subtype = t.refinement;
t.inter = require('tcomb/lib/interface'); // IE8 alias
t['interface'] = t.inter;

// functions
t.assert = t;
t.update = require('tcomb/lib/update');
t.mixin = require('tcomb/lib/mixin');
t.isType = require('tcomb/lib/isType');
t.is = require('tcomb/lib/is');
t.getTypeName = require('tcomb/lib/getTypeName');
t.match = require('tcomb/lib/match');

module.exports = t;
